using MilkTeaShop.Domain.Entities;
using MilkTeaShop.Domain.ValueObjects;
using System.IO;
using System.Text.Json;

namespace MilkTeaShop.Domain.Data;

public static class StaticMenuData
{
    private static readonly string DataFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "menu_data.json");
    
    private static List<MenuItem> _milkTeaItems = new()
    {
        new MenuItem { Name = "Trà sữa nguyên chất", BasePrice = 35000, Category = MenuCategory.MilkTea, Description = "Trà sữa truyền thống" },
        new MenuItem { Name = "Trà sữa chocolate", BasePrice = 40000, Category = MenuCategory.MilkTea, Description = "Trà sữa vị chocolate thơm ngon" },
        new MenuItem { Name = "Trà sữa dâu", BasePrice = 42000, Category = MenuCategory.MilkTea, Description = "Trà sữa vị dâu tươi mát" },
        new MenuItem { Name = "Trà sữa khoai môn", BasePrice = 45000, Category = MenuCategory.MilkTea, Description = "Trà sữa khoai môn béo ngậy" },
        new MenuItem { Name = "Trà sữa matcha", BasePrice = 48000, Category = MenuCategory.MilkTea, Description = "Trà sữa matcha Nhật Bản" },
        new MenuItem { Name = "Trà sữa đường đen", BasePrice = 50000, Category = MenuCategory.MilkTea, Description = "Trà sữa đường đen Taiwan" },
        new MenuItem { Name = "Trà sữa kem cheese", BasePrice = 55000, Category = MenuCategory.MilkTea, Description = "Trà sữa với lớp kem cheese mặn ngọt" },
        new MenuItem { Name = "Trà sữa socola", BasePrice = 45000, Category = MenuCategory.MilkTea, Description = "Trà sữa socola đậm đà" },
        new MenuItem { Name = "Trà sữa hokkaido", BasePrice = 52000, Category = MenuCategory.MilkTea, Description = "Trà sữa Hokkaido cao cấp" },
        new MenuItem { Name = "Trà sữa okinawa", BasePrice = 48000, Category = MenuCategory.MilkTea, Description = "Trà sữa Okinawa thơm lừng" }
    };

    private static List<MenuItem> _toppingItems = new()
    {
        new MenuItem { Name = "Trân châu đen", BasePrice = 8000, Category = MenuCategory.Topping, Description = "Trân châu đen dai ngon" },
        new MenuItem { Name = "Trân châu trắng", BasePrice = 8000, Category = MenuCategory.Topping, Description = "Trân châu trắng mềm mịn" },
        new MenuItem { Name = "Trân châu hoàng kim", BasePrice = 10000, Category = MenuCategory.Topping, Description = "Trân châu hoàng kim đặc biệt" },
        new MenuItem { Name = "Pudding", BasePrice = 12000, Category = MenuCategory.Topping, Description = "Pudding mềm mịn" },
        new MenuItem { Name = "Thạch cà phê", BasePrice = 10000, Category = MenuCategory.Topping, Description = "Thạch cà phê thơm đậm đà" },
        new MenuItem { Name = "Thạch dừa", BasePrice = 10000, Category = MenuCategory.Topping, Description = "Thạch dừa tươi mát" },
        new MenuItem { Name = "Kem cheese", BasePrice = 15000, Category = MenuCategory.Topping, Description = "Lớp kem cheese mặn ngọt" },
        new MenuItem { Name = "Đậu đỏ", BasePrice = 8000, Category = MenuCategory.Topping, Description = "Đậu đỏ bùi bùi" },
        new MenuItem { Name = "Hạt chia", BasePrice = 12000, Category = MenuCategory.Topping, Description = "Hạt chia giàu dinh dưỡng" },
        new MenuItem { Name = "Jelly", BasePrice = 9000, Category = MenuCategory.Topping, Description = "Thạch jelly nhiều màu sắc" }
    };

    public static List<MenuItem> MilkTeaItems 
    { 
        get 
        {
            LoadDataFromFile();
            return _milkTeaItems;
        } 
    }

    public static List<MenuItem> ToppingItems 
    { 
        get 
        {
            LoadDataFromFile();
            return _toppingItems;
        } 
    }

    public static List<MenuItem> GetAllItems() => MilkTeaItems.Concat(ToppingItems).ToList();
    
    public static void AddNewItem(MenuItem item)
    {
        LoadDataFromFile(); // Ensure we have latest data
        
        if (item.Category == MenuCategory.MilkTea)
            _milkTeaItems.Add(item);
        else
            _toppingItems.Add(item);
            
        SaveDataToFile();
    }

    // Helper methods để lấy tên các loại trà sữa và topping
    public static List<string> GetMilkTeaNames() => MilkTeaItems.Select(x => x.Name).ToList();
    public static List<string> GetToppingNames() => ToppingItems.Select(x => x.Name).ToList();

    // Method to calculate price based on size (Medium is base price, Small -10%, Large +10%)
    public static decimal CalculatePriceBySize(decimal basePrice, SizeOption size)
    {
        return size switch
        {
            SizeOption.Small => basePrice * 0.9M,  // -10%
            SizeOption.Medium => basePrice,        // Base price
            SizeOption.Large => basePrice * 1.1M,  // +10%
            _ => basePrice
        };
    }

    private static void LoadDataFromFile()
    {
        try
        {
            if (File.Exists(DataFilePath))
            {
                var json = File.ReadAllText(DataFilePath);
                var data = JsonSerializer.Deserialize<MenuData>(json);
                if (data != null)
                {
                    _milkTeaItems = data.MilkTeaItems ?? _milkTeaItems;
                    _toppingItems = data.ToppingItems ?? _toppingItems;
                }
            }
        }
        catch
        {
            // If loading fails, use default data
        }
    }

    private static void SaveDataToFile()
    {
        try
        {
            var data = new MenuData
            {
                MilkTeaItems = _milkTeaItems,
                ToppingItems = _toppingItems
            };
            
            var json = JsonSerializer.Serialize(data, new JsonSerializerOptions { WriteIndented = true });
            File.WriteAllText(DataFilePath, json);
        }
        catch
        {
            // Ignore save errors for now
        }
    }

    private class MenuData
    {
        public List<MenuItem> MilkTeaItems { get; set; } = new();
        public List<MenuItem> ToppingItems { get; set; } = new();
    }
}